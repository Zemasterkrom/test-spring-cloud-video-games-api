name: Build and test with Load Balancing
on: push

jobs:
  build-test-lb:
    name: ${{ matrix.os }} - Build and test with Load Balancing
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]

    steps:
      - uses: actions/checkout@v3

      - name: Set up CI/CD builders
        uses: ./.github/actions/setup

      - name: Build main components (API, Config server)
        uses: ./.github/actions/build-main

      - name: Build Load Balancing related components (Eureka discovery server, Load Balancing server)
        uses: ./.github/actions/build-lb

      - name: Change default front server port
        shell: bash
        run: echo $'\nFRONT_SERVER_PORT=4201' >> vglfront/.env

      - name: Run Config server
        run: java -DGIT_CONFIG_BRANCH=${{github.head_ref || github.ref_name}} -DGIT_CONFIG_REPOSITORY=https://github.com/Zemasterkrom/spring-cloud-video-games-api-config -XX:TieredStopAtLevel=1 -jar vglconfig/target/vglconfig.jar &

      - name: Run Spring Boot API
        run: java -DALLOWED_ORIGINS=http://localhost:4201 -XX:TieredStopAtLevel=1 -jar vglservice/target/vglservice.jar &

      - name: Run Eureka discovery server
        run: java -jar vgldiscovery/target/vgldiscovery.jar -XX:TieredStopAtLevel=1 &

      - name: Run Load Balancing server
        run: java -jar vglloadbalancer/target/vglloadbalancer.jar -XX:TieredStopAtLevel=1 &

      - name: Run npm front
        run: npm run start --prefix vglfront &

      - name: Test API and front
        uses: ./.github/actions/test-lb

  build-test-lb-docker:
    name: ${{ matrix.os }} - Build and test with Load Balancing (Docker)
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]

    steps:
      - uses: actions/checkout@v3

      - name: Change default front server port
        shell: bash
        run: |
          echo $'\nFRONT_SERVER_PORT=4201' >> .env
          echo $'\nAPI_ALLOWED_ORIGINS=http://localhost:4201' >> .env
          echo $'\nLOADBALANCER_ALLOWED_ORIGINS=http://localhost:4201' >> .env

      - name: Optimize runners resources and timeout
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          echo $'\nlogging.level.root=ERROR\nserver.tomcat.max-threads=1' >> vglconfig/src/main/resources/application.properties
          echo $'\nlogging.level.root=ERROR\nserver.tomcat.max-threads=1' >> vgldiscovery/src/main/resources/application.properties
          echo $'\nlogging.level.root=ERROR\nserver.tomcat.max-threads=1' >> vglloadbalancer/src/main/resources/application.properties
          echo $'\nlogging.level.root=ERROR\nserver.tomcat.max-threads=1' >> vglservice/src/main/resources/application.properties

      - name: Install Docker on macOS
        if: runner.os == 'macOS'
        run: |
          brew install docker docker-machine docker-compose
          mkdir -p ~/.docker/cli-plugins
          ln -sfn $(brew --prefix)/opt/docker-compose/bin/docker-compose ~/.docker/cli-plugins/docker-compose
          sudo docker-machine create --driver virtualbox default
          sudo docker-machine env default
          eval "$(docker-machine env default)"

      - name: Launch containers
        run: |
          GIT_CONFIG_BRANCH=${{github.head_ref || github.ref_name}} docker compose build vglconfig vglservice
          GIT_CONFIG_BRANCH=${{github.head_ref || github.ref_name}} docker compose build vgldiscovery vglloadbalancer
          GIT_CONFIG_BRANCH=${{github.head_ref || github.ref_name}} docker compose up -d --build

      - name: Test API and front
        uses: ./.github/actions/test-lb